[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "apps.notifications.models",
        "description": "apps.notifications.models",
        "isExtraImport": true,
        "detail": "apps.notifications.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "apps.users.models",
        "description": "apps.users.models",
        "isExtraImport": true,
        "detail": "apps.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "apps.users.models",
        "description": "apps.users.models",
        "isExtraImport": true,
        "detail": "apps.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "apps.users.models",
        "description": "apps.users.models",
        "isExtraImport": true,
        "detail": "apps.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "apps.users.models",
        "description": "apps.users.models",
        "isExtraImport": true,
        "detail": "apps.users.models",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "importPath": "apps.transactions.models",
        "description": "apps.transactions.models",
        "isExtraImport": true,
        "detail": "apps.transactions.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "Wallet",
        "importPath": "apps.wallet.models",
        "description": "apps.wallet.models",
        "isExtraImport": true,
        "detail": "apps.wallet.models",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "isExtraImport": true,
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "WalletViewSet",
        "importPath": "apps.wallet.views",
        "description": "apps.wallet.views",
        "isExtraImport": true,
        "detail": "apps.wallet.views",
        "documentation": {}
    },
    {
        "label": "TransactionViewSet",
        "importPath": "apps.transactions.views",
        "description": "apps.transactions.views",
        "isExtraImport": true,
        "detail": "apps.transactions.views",
        "documentation": {}
    },
    {
        "label": "NotificationViewSet",
        "importPath": "apps.notifications.views",
        "description": "apps.notifications.views",
        "isExtraImport": true,
        "detail": "apps.notifications.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.notifications.migrations.0001_initial",
        "description": "root.backend.src.django.apps.notifications.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Notification',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=100)),",
        "detail": "root.backend.src.django.apps.notifications.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.notifications.migrations.0002_initial",
        "description": "root.backend.src.django.apps.notifications.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('notifications', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='notification',\n            name='user',",
        "detail": "root.backend.src.django.apps.notifications.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "NotificationsConfig",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.notifications.apps",
        "description": "root.backend.src.django.apps.notifications.apps",
        "peekOfCode": "class NotificationsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.notifications'",
        "detail": "root.backend.src.django.apps.notifications.apps",
        "documentation": {}
    },
    {
        "label": "Notification",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.notifications.models",
        "description": "root.backend.src.django.apps.notifications.models",
        "peekOfCode": "class Notification(models.Model):\n    # Lien vers l'utilisateur concerné par la notification\n    user = models.ForeignKey(\n        settings.AUTH_USER_MODEL,\n        on_delete=models.CASCADE,      # Suppression des notifications si l'utilisateur est supprimé\n        related_name='notifications'   # Accès via user.notifications\n    )\n    # Titre de la notification\n    title = models.CharField(max_length=100)\n    # Message détaillé de la notification",
        "detail": "root.backend.src.django.apps.notifications.models",
        "documentation": {}
    },
    {
        "label": "NotificationSerializer",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.notifications.serializers",
        "description": "root.backend.src.django.apps.notifications.serializers",
        "peekOfCode": "class NotificationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Notification  # Modèle associé au sérialiseur\n        # Champs à inclure dans la représentation JSON\n        fields = ['id', 'title', 'message', 'is_read', 'created_at']",
        "detail": "root.backend.src.django.apps.notifications.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationViewSetTest",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.notifications.tests",
        "description": "root.backend.src.django.apps.notifications.tests",
        "peekOfCode": "class NotificationViewSetTest(APITestCase):\n    def setUp(self):\n        # Création d'un utilisateur de test\n        self.user = User.objects.create_user(email='notif@example.com', password='pass')\n        # Authentification automatique du client de test avec cet utilisateur\n        self.client.force_authenticate(user=self.user)\n        # Création d'une notification associée à cet utilisateur\n        self.notification = Notification.objects.create(\n            user=self.user,\n            title='Test',",
        "detail": "root.backend.src.django.apps.notifications.tests",
        "documentation": {}
    },
    {
        "label": "NotificationViewSet",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.notifications.views",
        "description": "root.backend.src.django.apps.notifications.views",
        "peekOfCode": "class NotificationViewSet(viewsets.ModelViewSet):\n    queryset = Notification.objects.all()\n    serializer_class = NotificationSerializer\n    permission_classes = [IsAuthenticated]",
        "detail": "root.backend.src.django.apps.notifications.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.transactions.migrations.0001_initial",
        "description": "root.backend.src.django.apps.transactions.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Transaction',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),",
        "detail": "root.backend.src.django.apps.transactions.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.transactions.migrations.0002_initial",
        "description": "root.backend.src.django.apps.transactions.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('transactions', '0001_initial'),\n        ('wallet', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='transaction',\n            name='wallet',",
        "detail": "root.backend.src.django.apps.transactions.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "TransactionsConfig",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.transactions.apps",
        "description": "root.backend.src.django.apps.transactions.apps",
        "peekOfCode": "class TransactionsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.transactions'",
        "detail": "root.backend.src.django.apps.transactions.apps",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.transactions.models",
        "description": "root.backend.src.django.apps.transactions.models",
        "peekOfCode": "class Transaction(models.Model):\n    # Types de transaction possibles\n    CREDIT = 'credit'\n    DEBIT = 'debit'\n    TYPE_CHOICES = [\n        (CREDIT, 'Credit'),  # Crédit (ajout d'argent)\n        (DEBIT, 'Debit'),    # Débit (retrait d'argent)\n    ]\n    # Référence au portefeuille concerné\n    wallet = models.ForeignKey(",
        "detail": "root.backend.src.django.apps.transactions.models",
        "documentation": {}
    },
    {
        "label": "TransactionSerializer",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.transactions.serializers",
        "description": "root.backend.src.django.apps.transactions.serializers",
        "peekOfCode": "class TransactionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Transaction\n        fields = ['id', 'wallet', 'amount', 'tx_type', 'description', 'created_at']",
        "detail": "root.backend.src.django.apps.transactions.serializers",
        "documentation": {}
    },
    {
        "label": "TransactionViewSetTest",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.transactions.tests",
        "description": "root.backend.src.django.apps.transactions.tests",
        "peekOfCode": "class TransactionViewSetTest(APITestCase):\n    def setUp(self):\n        # Création d'un utilisateur de test\n        self.user = User.objects.create_user(email='tx@example.com', password='pass')\n        # Authentification automatique du client de test avec cet utilisateur\n        self.client.force_authenticate(user=self.user)\n    def test_create_credit_transaction(self):\n        # Récupère l'URL de la liste/création des transactions via le nom de route\n        url = reverse('transaction-list')\n        # Prépare les données pour une transaction de crédit",
        "detail": "root.backend.src.django.apps.transactions.tests",
        "documentation": {}
    },
    {
        "label": "TransactionViewSet",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.transactions.views",
        "description": "root.backend.src.django.apps.transactions.views",
        "peekOfCode": "class TransactionViewSet(viewsets.ModelViewSet):\n    queryset = Transaction.objects.all()\n    serializer_class = TransactionSerializer\n    permission_classes = [IsAuthenticated]",
        "detail": "root.backend.src.django.apps.transactions.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.users.migrations.0001_initial",
        "description": "root.backend.src.django.apps.users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "root.backend.src.django.apps.users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.users.apps",
        "description": "root.backend.src.django.apps.users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.users'",
        "detail": "root.backend.src.django.apps.users.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.users.models",
        "description": "root.backend.src.django.apps.users.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    # Méthode pour créer un utilisateur standard\n    def create_user(self, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError(\"L’email est requis\")  # Vérifie que l'email est fourni\n        email = self.normalize_email(email)  # Normalise l'email (ex: minuscule)\n        user = self.model(email=email, **extra_fields)  # Crée une instance User\n        user.set_password(password)  # Hash le mot de passe\n        user.save(using=self._db)  # Sauvegarde dans la base de données\n        return user",
        "detail": "root.backend.src.django.apps.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.users.models",
        "description": "root.backend.src.django.apps.users.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    email = models.EmailField(unique=True)  # Email unique pour chaque utilisateur\n    username = models.CharField(max_length=30, blank=True)  # Nom d'utilisateur optionnel\n    phone_number = models.CharField(max_length=15, unique=True)  # Numéro de téléphone unique\n    is_verified = models.BooleanField(default=False)  # Statut de vérification\n    is_staff = models.BooleanField(default=False)  # Peut accéder à l'admin Django\n    date_joined = models.DateTimeField(auto_now_add=True)  # Date d'inscription\n    objects = UserManager()  # Utilise le gestionnaire personnalisé\n    USERNAME_FIELD = 'email'  # Champ utilisé pour l'authentification\n    REQUIRED_FIELDS = []  # Champs requis lors de la création via createsuperuser",
        "detail": "root.backend.src.django.apps.users.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.users.serializers",
        "description": "root.backend.src.django.apps.users.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['id', 'email', 'phone_number', 'is_verified', 'date_joined']",
        "detail": "root.backend.src.django.apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "UserViewSetTest",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.users.tests",
        "description": "root.backend.src.django.apps.users.tests",
        "peekOfCode": "class UserViewSetTest(APITestCase):\n    def setUp(self):\n        # Création d'un utilisateur de test\n        self.user = User.objects.create_user(\n            email='test@example.com',\n            password='securepass',\n            phone_number='0101010101'\n        )\n        # Authentification automatique du client de test avec cet utilisateur\n        self.client.force_authenticate(user=self.user)",
        "detail": "root.backend.src.django.apps.users.tests",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.users.views",
        "description": "root.backend.src.django.apps.users.views",
        "peekOfCode": "class UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n    permission_classes = [IsAuthenticated]",
        "detail": "root.backend.src.django.apps.users.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.wallet.migrations.0001_initial",
        "description": "root.backend.src.django.apps.wallet.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Wallet',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "root.backend.src.django.apps.wallet.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "WalletConfig",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.wallet.apps",
        "description": "root.backend.src.django.apps.wallet.apps",
        "peekOfCode": "class WalletConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.wallet'",
        "detail": "root.backend.src.django.apps.wallet.apps",
        "documentation": {}
    },
    {
        "label": "Wallet",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.wallet.models",
        "description": "root.backend.src.django.apps.wallet.models",
        "peekOfCode": "class Wallet(models.Model):\n    # Lien unique avec l'utilisateur (un wallet par utilisateur)\n    user = models.OneToOneField(\n        settings.AUTH_USER_MODEL,\n        on_delete=models.CASCADE,  # Suppression du wallet si l'utilisateur est supprimé\n        related_name='wallet'      # Permet d'accéder au wallet via user.wallet\n    )\n    # Solde du portefeuille, avec 2 décimales\n    balance = models.DecimalField(\n        max_digits=12, decimal_places=2, default=0.00",
        "detail": "root.backend.src.django.apps.wallet.models",
        "documentation": {}
    },
    {
        "label": "create_user_wallet",
        "kind": 2,
        "importPath": "root.backend.src.django.apps.wallet.models",
        "description": "root.backend.src.django.apps.wallet.models",
        "peekOfCode": "def create_user_wallet(sender, instance, created, **kwargs):\n    if created:\n        Wallet.objects.create(user=instance)",
        "detail": "root.backend.src.django.apps.wallet.models",
        "documentation": {}
    },
    {
        "label": "WalletSerializer",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.wallet.serializers",
        "description": "root.backend.src.django.apps.wallet.serializers",
        "peekOfCode": "class WalletSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Wallet\n        fields = ['id', 'balance', 'updated_at']\n        read_only_fields = ['balance']",
        "detail": "root.backend.src.django.apps.wallet.serializers",
        "documentation": {}
    },
    {
        "label": "WalletViewSetTest",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.wallet.tests",
        "description": "root.backend.src.django.apps.wallet.tests",
        "peekOfCode": "class WalletViewSetTest(APITestCase):\n    def setUp(self):\n        # Création d'un utilisateur de test\n        self.user = User.objects.create_user(email='wallet@example.com', password='pass')\n        # Authentification automatique du client de test avec cet utilisateur\n        self.client.force_authenticate(user=self.user)\n    def test_wallet_created_on_user_creation(self):\n        # Vérifie que le wallet est bien créé automatiquement lors de la création de l'utilisateur\n        self.assertTrue(hasattr(self.user, 'wallet'))\n        # Vérifie que le solde initial du wallet est bien à 0",
        "detail": "root.backend.src.django.apps.wallet.tests",
        "documentation": {}
    },
    {
        "label": "WalletViewSet",
        "kind": 6,
        "importPath": "root.backend.src.django.apps.wallet.views",
        "description": "root.backend.src.django.apps.wallet.views",
        "peekOfCode": "class WalletViewSet(viewsets.ModelViewSet):\n    queryset = Wallet.objects.all()\n    serializer_class = WalletSerializer\n    permission_classes = [IsAuthenticated]",
        "detail": "root.backend.src.django.apps.wallet.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "root.backend.src.django.core.asgi",
        "description": "root.backend.src.django.core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "root.backend.src.django.core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-1e@=qi*(g#fw4y@cf#rv@ftle!0qr)&n!m59%ht*j25hyl&*u&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-1e@=qi*(g#fw4y@cf#rv@ftle!0qr)&n!m59%ht*j25hyl&*u&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'apps.users',",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'apps.users',\n    'apps.notifications',\n    'apps.transactions',",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'core.urls'",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'core' / 'static',\n]",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'core' / 'static',\n]\n# Default primary key field type",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'core' / 'static',\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'core' / 'static',\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'core' / 'static',\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom User Model\n# This tells Django to use your custom User model instead of the default one.\nAUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / 'core' / 'static',\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom User Model\n# This tells Django to use your custom User model instead of the default one.\nAUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom User Model\n# This tells Django to use your custom User model instead of the default one.\nAUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "root.backend.src.django.core.settings",
        "description": "root.backend.src.django.core.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.django.core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "root.backend.src.django.core.urls",
        "description": "root.backend.src.django.core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n]",
        "detail": "root.backend.src.django.core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "root.backend.src.django.core.wsgi",
        "description": "root.backend.src.django.core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "root.backend.src.django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "root.backend.src.django.manage",
        "description": "root.backend.src.django.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "root.backend.src.django.manage",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "root.backend.src.urls",
        "description": "root.backend.src.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'wallets', WalletViewSet)\nrouter.register(r'transactions', TransactionViewSet)\nrouter.register(r'notifications', NotificationViewSet)\nurlpatterns = [\n    path('api/', include(router.urls)),\n]",
        "detail": "root.backend.src.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "root.backend.src.urls",
        "description": "root.backend.src.urls",
        "peekOfCode": "urlpatterns = [\n    path('api/', include(router.urls)),\n]",
        "detail": "root.backend.src.urls",
        "documentation": {}
    }
]