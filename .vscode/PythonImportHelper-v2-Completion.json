[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Wallet",
        "importPath": "wallet.models",
        "description": "wallet.models",
        "isExtraImport": true,
        "detail": "wallet.models",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "importPath": "users.views",
        "description": "users.views",
        "isExtraImport": true,
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "WalletViewSet",
        "importPath": "wallet.views",
        "description": "wallet.views",
        "isExtraImport": true,
        "detail": "wallet.views",
        "documentation": {}
    },
    {
        "label": "TransactionViewSet",
        "importPath": "transactions.views",
        "description": "transactions.views",
        "isExtraImport": true,
        "detail": "transactions.views",
        "documentation": {}
    },
    {
        "label": "NotificationViewSet",
        "importPath": "notifications.views",
        "description": "notifications.views",
        "isExtraImport": true,
        "detail": "notifications.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.apps.notifications.migrations.0001_initial",
        "description": "root.backend.src.apps.notifications.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Notification',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255)),",
        "detail": "root.backend.src.apps.notifications.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.apps.notifications.migrations.0002_initial",
        "description": "root.backend.src.apps.notifications.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('notifications', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='notification',\n            name='user',",
        "detail": "root.backend.src.apps.notifications.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "NotificationsConfig",
        "kind": 6,
        "importPath": "root.backend.src.apps.notifications.apps",
        "description": "root.backend.src.apps.notifications.apps",
        "peekOfCode": "class NotificationsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'notifications'",
        "detail": "root.backend.src.apps.notifications.apps",
        "documentation": {}
    },
    {
        "label": "Notification",
        "kind": 6,
        "importPath": "root.backend.src.apps.notifications.models",
        "description": "root.backend.src.apps.notifications.models",
        "peekOfCode": "class Notification(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='notifications')\n    title = models.CharField(max_length=255)\n    message = models.TextField()\n    is_read = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def mark_as_read(self):\n        self.is_read = True\n        self.save()",
        "detail": "root.backend.src.apps.notifications.models",
        "documentation": {}
    },
    {
        "label": "NotificationSerializer",
        "kind": 6,
        "importPath": "root.backend.src.apps.notifications.serializers",
        "description": "root.backend.src.apps.notifications.serializers",
        "peekOfCode": "class NotificationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Notification\n        fields = ['id', 'title', 'message', 'is_read', 'created_at']",
        "detail": "root.backend.src.apps.notifications.serializers",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.apps.transactions.migrations.0001_initial",
        "description": "root.backend.src.apps.transactions.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Transaction',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),",
        "detail": "root.backend.src.apps.transactions.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.apps.transactions.migrations.0002_initial",
        "description": "root.backend.src.apps.transactions.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('transactions', '0001_initial'),\n        ('wallet', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='transaction',\n            name='wallet',",
        "detail": "root.backend.src.apps.transactions.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "TransactionsConfig",
        "kind": 6,
        "importPath": "root.backend.src.apps.transactions.apps",
        "description": "root.backend.src.apps.transactions.apps",
        "peekOfCode": "class TransactionsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'transactions'",
        "detail": "root.backend.src.apps.transactions.apps",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "kind": 6,
        "importPath": "root.backend.src.apps.transactions.models",
        "description": "root.backend.src.apps.transactions.models",
        "peekOfCode": "class Transaction(models.Model):\n    TX_TYPES = (('credit', 'Crédit'), ('debit', 'Débit'))\n    wallet = models.ForeignKey(Wallet, on_delete=models.CASCADE, related_name='transactions')\n    amount = models.DecimalField(max_digits=12, decimal_places=2)\n    tx_type = models.CharField(max_length=10, choices=TX_TYPES)\n    description = models.TextField(blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def save(self, *args, **kwargs):\n        if self.tx_type == 'credit':\n            self.wallet.deposit(self.amount)",
        "detail": "root.backend.src.apps.transactions.models",
        "documentation": {}
    },
    {
        "label": "TransactionSerializer",
        "kind": 6,
        "importPath": "root.backend.src.apps.transactions.serializers",
        "description": "root.backend.src.apps.transactions.serializers",
        "peekOfCode": "class TransactionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Transaction\n        fields = ['id', 'wallet', 'amount', 'tx_type', 'description', 'created_at']",
        "detail": "root.backend.src.apps.transactions.serializers",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.apps.users.migrations.0001_initial",
        "description": "root.backend.src.apps.users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "root.backend.src.apps.users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "root.backend.src.apps.users.admin",
        "description": "root.backend.src.apps.users.admin",
        "peekOfCode": "class UserAdmin(BaseUserAdmin):\n    model = User\n    list_display = ('email', 'phone_number', 'is_verified', 'is_staff', 'date_joined')\n    ordering = ('-date_joined',)\n    search_fields = ('email', 'phone_number')\n    fieldsets = (\n        (None, {'fields': ('email', 'phone_number', 'password')}),\n        ('Permissions', {'fields': ('is_verified', 'is_staff', 'is_superuser')}),\n        ('Dates', {'fields': ('date_joined',)}),\n    )",
        "detail": "root.backend.src.apps.users.admin",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "root.backend.src.apps.users.apps",
        "description": "root.backend.src.apps.users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "root.backend.src.apps.users.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "root.backend.src.apps.users.managers",
        "description": "root.backend.src.apps.users.managers",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def create_user(self, email, phone_number, password=None, **extra_fields):\n        if not email:\n            raise ValueError('L’adresse email est obligatoire')\n        if not phone_number:\n            raise ValueError('Le numéro de téléphone est obligatoire')\n        email = self.normalize_email(email)\n        user = self.model(email=email, phone_number=phone_number, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)",
        "detail": "root.backend.src.apps.users.managers",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "root.backend.src.apps.users.models",
        "description": "root.backend.src.apps.users.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    email = models.EmailField(unique=True)\n    phone_number = models.CharField(max_length=20, unique=True)\n    is_verified = models.BooleanField(default=False)\n    is_active = models.BooleanField(default=True)\n    is_staff = models.BooleanField(default=False)\n    date_joined = models.DateTimeField(auto_now_add=True)\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['phone_number']\n    objects = UserManager()",
        "detail": "root.backend.src.apps.users.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "root.backend.src.apps.users.serializers",
        "description": "root.backend.src.apps.users.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['id', 'email', 'phone_number', 'is_verified', 'date_joined']",
        "detail": "root.backend.src.apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "root.backend.src.apps.wallet.migrations.0001_initial",
        "description": "root.backend.src.apps.wallet.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Wallet',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "root.backend.src.apps.wallet.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "WalletConfig",
        "kind": 6,
        "importPath": "root.backend.src.apps.wallet.apps",
        "description": "root.backend.src.apps.wallet.apps",
        "peekOfCode": "class WalletConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'wallet'",
        "detail": "root.backend.src.apps.wallet.apps",
        "documentation": {}
    },
    {
        "label": "Wallet",
        "kind": 6,
        "importPath": "root.backend.src.apps.wallet.models",
        "description": "root.backend.src.apps.wallet.models",
        "peekOfCode": "class Wallet(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='wallet')\n    balance = models.DecimalField(max_digits=12, decimal_places=2, default=0.00)\n    updated_at = models.DateTimeField(auto_now=True)\n    def deposit(self, amount):\n        self.balance += amount\n        self.save()\n    def withdraw(self, amount):\n        if self.balance >= amount:\n            self.balance -= amount",
        "detail": "root.backend.src.apps.wallet.models",
        "documentation": {}
    },
    {
        "label": "WalletSerializer",
        "kind": 6,
        "importPath": "root.backend.src.apps.wallet.serializers",
        "description": "root.backend.src.apps.wallet.serializers",
        "peekOfCode": "class WalletSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Wallet\n        fields = ['id', 'balance', 'updated_at']\n        read_only_fields = ['balance']",
        "detail": "root.backend.src.apps.wallet.serializers",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "root.backend.src.core.asgi",
        "description": "root.backend.src.core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "root.backend.src.core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nprint(\"BASE_DIR:\", BASE_DIR)\n# Ajoute le répertoire 'apps' au chemin de Python pour permettre les imports directs\nsys.path.insert(0, str(BASE_DIR / 'apps'))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-1cw^@bunmskfn8dqb(#+s7v45iqbip08a&8mioibf5^=q24=_f'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-1cw^@bunmskfn8dqb(#+s7v45iqbip08a&8mioibf5^=q24=_f'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # Django REST Framework",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # Django REST Framework\n    'rest_framework',\n    # Authentification JWT",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'core.urls'",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "root.backend.src.core.settings",
        "description": "root.backend.src.core.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.User'",
        "detail": "root.backend.src.core.settings",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "root.backend.src.core.urls",
        "description": "root.backend.src.core.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'wallets', WalletViewSet)\nrouter.register(r'transactions', TransactionViewSet)\nrouter.register(r'notifications', NotificationViewSet)\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include(router.urls)),\n    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),",
        "detail": "root.backend.src.core.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "root.backend.src.core.urls",
        "description": "root.backend.src.core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include(router.urls)),\n    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n]",
        "detail": "root.backend.src.core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "root.backend.src.core.wsgi",
        "description": "root.backend.src.core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "root.backend.src.core.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "root.backend.src.manage",
        "description": "root.backend.src.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "root.backend.src.manage",
        "documentation": {}
    }
]